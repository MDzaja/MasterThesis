gpu_id: 0 # GPU ID to use; possible values: 0, 1
directory: /path/to/directory # Path to result directory
windows_size: 60 # Window size for the model, how many previous samples to use for prediction

combinations:
  - labels:
      # Possible values: "all", "ct_two_state", "ct_three_state", "fixed_time_horizon", "oracle", "triple_barrier"
      ct_two_state:
        train: /path/to/ct_two_state/train_labels.pkl
        test: /path/to/ct_two_state/test_labels.pkl
      ct_three_state:
        train: /path/to/ct_three_state/train_labels.pkl
        test: /path/to/ct_three_state/test_labels.pkl
    weights:
      # Possible values: "all", "none", "trend_interval_return", "forward_looking", "sequential_return", "backward_looking"
      # "all" is equivalent to "trend_interval_return, forward_looking, sequential_return, backward_looking"
      trend_interval_return:
        train: /path/to/trend_interval_return/train_weights.pkl
        test: /path/to/trend_interval_return/test_weights.pkl
      none: # If 'none', no paths are required
    data:
      # Possible values: "raw", "features"
      raw:
        train: /path/to/raw/train_data.csv
        test: /path/to/raw/test_data.csv
    model:
      # Possible values: "cnn_lstm", "lstm", "transformer"
      cnn_lstm:
        hyperparameters: /path/to/cnn_lstm_hyperparameters.json
        batch_size: 64
        epochs: 500
        early_stopping_patience: 20
        cv_splits: 10 # Number of cross-validation splits, must be at least 2

  # ... other combinations
